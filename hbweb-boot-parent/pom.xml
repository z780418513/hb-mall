<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hb.boot</groupId>
    <artifactId>hbweb-boot-parent</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>



    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <wtvdev-boot-starter.version>1.0.13.2</wtvdev-boot-starter.version>
        <spring-cloud-alibaba-dependencies.version>2.2.6.RELEASE</spring-cloud-alibaba-dependencies.version>
        <dubbo.version>2.7.23</dubbo.version>
        <mybatis-spring-boot-starter.version>2.2.1</mybatis-spring-boot-starter.version>
        <spring-boot-dependencies.version>2.3.2.RELEASE</spring-boot-dependencies.version>
        <resteasy-client.version>3.11.0.Final</resteasy-client.version>
        <cxf-rt-frontend-jaxrs.version>3.2.0</cxf-rt-frontend-jaxrs.version>
        <spring-context-support.version>1.0.11</spring-context-support.version>
        <mybatis-plus-boot-starter.version>3.5.0</mybatis-plus-boot-starter.version>
        <mybatis-plus-generator.version>3.5.1</mybatis-plus-generator.version>
        <redisson-boot.version>3.16.7</redisson-boot.version>
        <knife4j-boot.version>2.0.9</knife4j-boot.version>
        <swagger.version>1.5.22</swagger.version>
        <xxl-job-core.version>2.3.0</xxl-job-core.version>
        <jeecg-boot.version>3.0</jeecg-boot.version>
        <elasticsearch.version>7.16.3</elasticsearch.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
        <lombok.version>1.18.22</lombok.version>
        <fastjson.version>1.2.83</fastjson.version>
        <hutool.version>5.7.22</hutool.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <shardingsphere.version>5.2.1</shardingsphere.version>
        <snakeyaml.version>1.33</snakeyaml.version>
        <spring-cloud-function.version>3.1.7</spring-cloud-function.version>
        <mysql-connector-java.version>8.0.21</mysql-connector-java.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <!--can be removed-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <exclusions>
                    <!--
                    漏洞说明:
                        Apache Dubbo 反序列化远程代码执行漏洞（CVE-2023-23638）
                        Apache Dubbo 高危漏洞合集	AVD-2022-1296563
                        Apache Dubbo Hessian-Lite 远程代码执行漏洞（CVE-2021-43297）
                    排除原因:
                        spring-cloud-alibaba 当前最新版本已经去除了 spring-cloud-starter-dubbo 模块, 目前最简单的方式是单独更新依赖版本
                    -->
                    <exclusion>
                        <groupId>org.apache.dubbo</groupId>
                        <artifactId>dubbo</artifactId>
                    </exclusion>
                    <!--
                    漏洞说明:
                        Spring Cloud Function functionRouter SPEL代码执行漏洞（CVE-2022-22963）
                        升级Spring Cloud Function至 3.1.7 或 3.2.3 及其以上
                    排除原因:
                        spring-cloud-alibaba 当前最新版本 2.2.9-RELEASE，依然存在漏洞问题， 目前最简单的方式是单独更新依赖版本
                    -->
                    <exclusion>
                        <groupId>org.springframework.cloud</groupId>
                        <artifactId>spring-cloud-function-context</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-function-context</artifactId>
                <version>${spring-cloud-function.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <!-- spring cloud dubbo 中使用的版本是1.0.11， spring cloud nacos 中使用的版本是 1.0.10, 1.0.10 会导致 dubbo 启动失败 -->
            <dependency>
                <groupId>com.alibaba.spring</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring-context-support.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <exclusions>
                    <!--
                    排除原因:
                        shardingsphere 5.2.1 版本需要 snakeyaml 版本 1.33 以上
                        spring-boot 2.7 以上才使用 snakeyaml 1.30 版本，且不能直接升级 spring-boot 版本
                    -->
                    <exclusion>
                        <groupId>org.yaml</groupId>
                        <artifactId>snakeyaml</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-bom</artifactId>
                <version>${hutool.version}</version>
                <type>pom</type>
                <!-- 注意这里是import -->
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-client</artifactId>
                <version>${resteasy-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxrs</artifactId>
                <version>${cxf-rt-frontend-jaxrs.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus-generator.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wtvdev.boot</groupId>
                <artifactId>wtvdev-job-boot-starter</artifactId>
                <version>${wtvdev-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wtvdev.boot</groupId>
                <artifactId>wtvdev-search-boot-starter</artifactId>
                <version>${wtvdev-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wtvdev.boot</groupId>
                <artifactId>wtvdev-jeecg-boot-starter</artifactId>
                <version>${wtvdev-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wtvdev.boot</groupId>
                <artifactId>wtvdev-common-boot-starter</artifactId>
                <version>${wtvdev-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wtvdev.boot</groupId>
                <artifactId>wtvdev-xml-boot-starter</artifactId>
                <version>${wtvdev-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wtvdev.boot</groupId>
                <artifactId>wtvdev-db-extend-boot-starter</artifactId>
                <version>${wtvdev-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wtvdev.boot</groupId>
                <artifactId>wtvdev-network-file-boot-starter</artifactId>
                <version>${wtvdev-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wtvdev.boot</groupId>
                <artifactId>wtvdev-id-generate-boot-starter</artifactId>
                <version>${wtvdev-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>transport</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.plugin</groupId>
                <artifactId>transport-netty4-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>x-pack-transport</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.plugin</groupId>
                <artifactId>x-pack-core</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.plugin</groupId>
                <artifactId>transport-nio-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch-nio</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${maven-install-plugin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-jdbc-core-spring-boot-starter</artifactId>
                <version>${shardingsphere.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j-boot.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source> <!-- depending on your project -->
                    <target>1.8</target> <!-- depending on your project -->
                    <annotationProcessorPaths>
                        <!--必须先扫描lombok在扫描mapstruct-->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                        <!-- other annotation processors -->
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>2.3.2.RELEASE</version>
                        </path>
                    </annotationProcessorPaths>

                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
